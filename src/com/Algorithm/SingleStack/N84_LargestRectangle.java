package com.Algorithm.SingleStack;

/**
 * 84. 柱状图中最大的矩形
 * 给定 n 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。
 *
 * 求在该柱状图中，能够勾勒出来的矩形的最大面积。
 *
 *
 *
 * 示例 1:
 *
 *
 *
 * 输入：heights = [2,1,5,6,2,3]
 * 输出：10
 * 解释：最大的矩形为图中红色区域，面积为 10
 * 示例 2：
 *
 *
 *
 * 输入： heights = [2,4]
 * 输出： 4
 */
public class N84_LargestRectangle {
    //超时
    public int largestRectangleArea(int[] heights) {
        if(heights == null || heights.length == 0){
            return 0;
        }
        int max = 0;
        for(int i : heights){
            max = Math.max(max,i);
        }
        int result = 0;
        for (int i = 0; i <= max; i++) {
            int tem = 0;
            int index = 0;
            while(index < heights.length){
                if(heights[index] >= i){
                    tem += i;
                    result = Math.max(result,tem);
                }else{
                    tem = 0;
                }
                index++;
            }
        }
        return result;
    }
}
